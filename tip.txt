### Time complexity depending on the range of N.
1. N <= 500
O(N^3)

2. N <= 2000
O(N^2)

3. N <= 100,000
O(NlogN)

4. N <= 10,000,000
O(N)

### Space complexity
1. int a[1000]
4KB

2. int a[1000000]
4MB

3. int a[2000][2000]
16MB

### Time and memory measurement
```python
import time

start_time = time.time() # start measuring

# source code

end_time = time.time() # end measuring
print("time :", end_time - start_time) # print the performance time
```

### Brute-Force Algorithm(완전 탐색 알고리즘)
Brute-Force Algorithm is used when the number of datas is under than 1 million.


### number in Python
```python
1_000 == 1000 	# True
10_000 == 10000	# True
```

### String operation
```python
'3' + '5' + '9'	# 359
'3' in '3' + '5' + '9'	# True
```
##String.split
list 형태를 반환한다.


### 입력
```
import sys
line = sys.stdin.readline()
# 개행문자가 포함되어 있다.
```


### dict operation
```
a = dict()
a.get(1,0)
-> key중에 1이 없으면 0을 반환한다.
```

### from collections import Counter
```
a = Counter("122333")
>> a
Counter({'3': 3, '2': 2, '1': 1})

>> a.get(4,0)
0
>> a[3]
0
>> a["3"]
3
```


디버깅 팁
print를 못하면 file이나 directory를 만들면 된다!
안되는 것을 하나씩 쪼개보자!
하나씩 확인!